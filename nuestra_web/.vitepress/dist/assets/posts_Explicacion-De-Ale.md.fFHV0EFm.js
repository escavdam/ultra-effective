import{_ as e,c as o,o as a,V as t}from"./chunks/framework.fZt_wkQb.js";const h=JSON.parse('{"title":"En este markdown te hablare de \\"document.\\" (con mis propias palabras, segun yo lo recuerdo)","description":"","frontmatter":{},"headers":[],"relativePath":"posts/Explicacion-De-Ale.md","filePath":"posts/Explicacion-De-Ale.md"}'),n={name:"posts/Explicacion-De-Ale.md"},r=t('<h1 id="en-este-markdown-te-hablare-de-document-con-mis-propias-palabras-segun-yo-lo-recuerdo" tabindex="-1">En este markdown te hablare de <em>&quot;document.&quot;</em> (con mis propias palabras, segun yo lo recuerdo) <a class="header-anchor" href="#en-este-markdown-te-hablare-de-document-con-mis-propias-palabras-segun-yo-lo-recuerdo" aria-label="Permalink to &quot;En este markdown te hablare de *&quot;document.&quot;* (con mis propias palabras, segun yo lo recuerdo)&quot;">​</a></h1><h2 id="a-continuacion-empezare-comentando-las-vertientes-de-document" tabindex="-1">A continuacion empezare comentando las vertientes de <em>&quot;document.&quot;</em>: <a class="header-anchor" href="#a-continuacion-empezare-comentando-las-vertientes-de-document" aria-label="Permalink to &quot;A continuacion empezare comentando las vertientes de *&quot;document.&quot;*:&quot;">​</a></h2><ol><li><p>En primer lugar, empezare hablando de <strong>&quot;document.querySelector&quot;</strong>: Este lo usaremos para, como bien pone, seleccionar un elemento que hayamos creado en el &quot;HTML&quot;</p></li><li><p>En segundo lugar, empezare hablando de <strong>&quot;document.innerHTML&quot;</strong>: Con <em>&quot;.innerHTML&quot;</em> lo que haremos es, una vez seleccionado un elemento de <em>&quot;HTML&quot;</em>, podemos modificar este. Por otro lado, antes de hacer nada con &quot;innerHTML&quot; tendremos que seleccionar un elemento <em>&quot;HTML&quot;</em>.</p></li><li><p>En tercer lugar, empezare hablando de <strong>&quot;.createElement()&quot;</strong>: Con <em>&quot;.createElement()&quot;</em> lo que haremos sera crear un elemento del tipo que queramos en el html pero antes de crearlo tendremos que comentar donde queremos que este se cree.</p></li><li><p>En cuarto lugar, empezare hablando de <strong>&quot;.appendChild()&quot;</strong>: Como resumin, segun lo que recuerdo, con <em>&quot;.appendChild()&quot;</em> sirve para agregar nuevos elementos al <em>&quot;HTML&quot;</em>.</p></li></ol><h3 id="en-resumidas-cuentas-lo-que-hacemos-con-document-es-acceder-al-html-a-travez-de-js" tabindex="-1">En resumidas cuentas lo que hacemos con <em>&quot;document.&quot;</em> es acceder al <em>&quot;HTML&quot;</em> a travez de <em>&quot;js.&quot;</em> <a class="header-anchor" href="#en-resumidas-cuentas-lo-que-hacemos-con-document-es-acceder-al-html-a-travez-de-js" aria-label="Permalink to &quot;En resumidas cuentas lo que hacemos con *&quot;document.&quot;* es acceder al *&quot;HTML&quot;* a travez de *&quot;js.&quot;*&quot;">​</a></h3>',4),s=[r];function u(c,m,d,l,i,q){return a(),o("div",null,s)}const _=e(n,[["render",u]]);export{h as __pageData,_ as default};
